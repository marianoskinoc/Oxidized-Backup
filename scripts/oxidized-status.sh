#!/bin/bash

# Script para verificar estado de Oxidized y backups
# Autor: marianoskinoc
# Fecha: $(date '+%Y-%m-%d')

echo "=========================================="
echo "üîÑ ESTADO DE OXIDIZED BACKUP SYSTEM"
echo "=========================================="
echo

# Verificar servicio Oxidized
echo "üìä Estado del servicio Oxidized:"
echo "--------------------------------"
systemctl is-active oxidized >/dev/null && echo "‚úÖ Servicio oxidized: ACTIVO" || echo "‚ùå Servicio oxidized: INACTIVO"
systemctl is-enabled oxidized >/dev/null && echo "‚úÖ Autostart: HABILITADO" || echo "‚ùå Autostart: DESHABILITADO"
echo

# Verificar archivos de configuraci√≥n
echo "‚öôÔ∏è  Archivos de configuraci√≥n:"
echo "-----------------------------"
if [ -f "/var/lib/oxidized/.config/oxidized/config" ]; then
    echo "‚úÖ Configuraci√≥n principal: OK"
else
    echo "‚ùå Configuraci√≥n principal: FALTA"
fi

if [ -f "/var/lib/oxidized/.config/oxidized/router.db" ]; then
    EQUIPOS=$(grep -v "^#" /var/lib/oxidized/.config/oxidized/router.db | grep -v "^$" | wc -l)
    echo "‚úÖ Base de datos de equipos: OK ($EQUIPOS equipos configurados)"
else
    echo "‚ùå Base de datos de equipos: FALTA"
fi
echo

# Verificar repositorio Git
echo "üì¶ Repositorio Git de backups:"
echo "-----------------------------"
if [ -d "/var/lib/oxidized/oxidized.git" ]; then
    echo "‚úÖ Repositorio Git: Inicializado"
    cd /var/lib/oxidized/oxidized.git
    COMMITS=$(git rev-list --all --count 2>/dev/null || echo "0")
    echo "üìä Total de commits: $COMMITS"
    if [ "$COMMITS" -gt "0" ]; then
        echo "üìÖ √öltimo backup: $(git log -1 --format="%cd" --date=format:"%Y-%m-%d %H:%M:%S" 2>/dev/null || echo "No disponible")"
    fi
else
    echo "‚ùå Repositorio Git: NO ENCONTRADO"
fi
echo

# Verificar conectividad API
echo "üåê API REST de Oxidized:"
echo "------------------------"
if curl -s http://localhost:8888/ >/dev/null 2>&1; then
    echo "‚úÖ API REST (puerto 8888): ACCESIBLE"
    NODES=$(curl -s http://localhost:8888/nodes | wc -l 2>/dev/null || echo "0")
    echo "üìä Equipos en API: $NODES"
else
    echo "‚ùå API REST (puerto 8888): NO ACCESIBLE"
fi
echo

# Verificar logs recientes
echo "üìù Logs recientes (√∫ltimas 5 l√≠neas):"
echo "------------------------------------"
if systemctl is-active oxidized >/dev/null; then
    journalctl -u oxidized --no-pager -n 5 --since "1 hour ago" || echo "‚ùå No se pudieron obtener los logs"
else
    echo "‚ÑπÔ∏è  Servicio no est√° ejecut√°ndose"
fi
echo

# Verificar uso de recursos
echo "üíª Uso de recursos:"
echo "------------------"
if pgrep -f oxidized >/dev/null; then
    PID=$(pgrep -f oxidized)
    CPU=$(ps -p $PID -o %cpu --no-headers 2>/dev/null || echo "N/A")
    MEM=$(ps -p $PID -o %mem --no-headers 2>/dev/null || echo "N/A")
    echo "CPU: ${CPU}%"
    echo "Memoria: ${MEM}%"
else
    echo "‚ùå Proceso no encontrado"
fi
echo

echo "=========================================="
echo "‚úÖ Verificaci√≥n completada - $(date)"
echo "=========================================="
